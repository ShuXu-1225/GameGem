{"remainingRequest":"/Users/jth/IdeaProjects/GameGem/node_modules/babel-loader/lib/index.js!/Users/jth/IdeaProjects/GameGem/src/utils/request.js","dependencies":[{"path":"/Users/jth/IdeaProjects/GameGem/src/utils/request.js","mtime":1625472221000},{"path":"/Users/jth/IdeaProjects/GameGem/node_modules/cache-loader/dist/cjs.js","mtime":1625748525933},{"path":"/Users/jth/IdeaProjects/GameGem/node_modules/babel-loader/lib/index.js","mtime":1625748526069}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgcm91dGVyIGZyb20gJ0Avcm91dGVyJzsgLy8gY3JlYXRlIGFuIGF4aW9zIGluc3RhbmNlCgp2YXIgc2VydmljZSA9IGF4aW9zLmNyZWF0ZSh7CiAgYmFzZVVSTDogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyA/IHByb2Nlc3MuZW52LlZVRV9BUFBfQkFTRV9BUEkgOiAnJywKICAvLyB1cmwgPSBiYXNlIHVybCArIHJlcXVlc3QgdXJsCiAgd2l0aENyZWRlbnRpYWxzOiB0cnVlLAogIC8vIHNlbmQgY29va2llcyB3aGVuIGNyb3NzLWRvbWFpbiByZXF1ZXN0cwogIHRpbWVvdXQ6IDUwMDAgLy8gcmVxdWVzdCB0aW1lb3V0Cgp9KTsgLy8gcmVxdWVzdCBpbnRlcmNlcHRvcgoKc2VydmljZS5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogIC8vIGRvIHNvbWV0aGluZyBiZWZvcmUgcmVxdWVzdCBpcyBzZW50CiAgLy8gY29uZmlnLmhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddID0gJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcKICBjb25maWcuaGVhZGVyc1snQ29udGVudC1UeXBlJ10gPSAnYXBwbGljYXRpb24vanNvbic7IC8vIGlmIChzdG9yZS5nZXR0ZXJzLnRva2VuKSB7CiAgLy8gICAvLyBsZXQgZWFjaCByZXF1ZXN0IGNhcnJ5IHRva2VuCiAgLy8gICAvLyBbJ1gtVG9rZW4nXSBpcyBhIGN1c3RvbSBoZWFkZXJzIGtleQogIC8vICAgLy8gcGxlYXNlIG1vZGlmeSBpdCBhY2NvcmRpbmcgdG8gdGhlIGFjdHVhbCBzaXR1YXRpb24KICAvLyAgIGNvbmZpZy5oZWFkZXJzWydYLVRva2VuJ10gPSAnJwogIC8vIH0KCiAgcmV0dXJuIGNvbmZpZzsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgLy8gZG8gc29tZXRoaW5nIHdpdGggcmVxdWVzdCBlcnJvcgogIGNvbnNvbGUubG9nKGVycm9yKTsgLy8gZm9yIGRlYnVnCgogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOyAvLyByZXNwb25zZSBpbnRlcmNlcHRvcgoKc2VydmljZS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKAovKioKICogSWYgeW91IHdhbnQgdG8gZ2V0IGh0dHAgaW5mb3JtYXRpb24gc3VjaCBhcyBoZWFkZXJzIG9yIHN0YXR1cwogKiBQbGVhc2UgcmV0dXJuICByZXNwb25zZSA9PiByZXNwb25zZQogKi8KCi8qKgogKiBEZXRlcm1pbmUgdGhlIHJlcXVlc3Qgc3RhdHVzIGJ5IGN1c3RvbSBjb2RlCiAqIEhlcmUgaXMganVzdCBhbiBleGFtcGxlCiAqIFlvdSBjYW4gYWxzbyBqdWRnZSB0aGUgc3RhdHVzIGJ5IEhUVFAgU3RhdHVzIENvZGUKICovCmZ1bmN0aW9uIChyZXNwb25zZSkgewogIHZhciByZXMgPSByZXNwb25zZS5kYXRhOwoKICBpZiAocmVzLmNvZGUgPT09IDAgfHwgcmVzLmNvZGUgPT09IDIwMCkgewogICAgcmV0dXJuIHJlczsKICB9IGVsc2UgaWYgKHJlcy5jb2RlID09PSA0MDApIHsKICAgIC8vIG1zZzogIueUqOaIt+acqueZu+W9le+8jOivt+eZu+W9leWQjumHjeaWsOiuv+mXru+8gSEiCiAgICByb3V0ZXIucmVwbGFjZSh7CiAgICAgIHBhdGg6ICcvbG9nSW4nCiAgICB9KTsKICB9IGVsc2UgewogICAgY29uc29sZS5sb2coJ3Jlcy5jb2RlJyArIHJlcy5jb2RlKTsgLy8gZm9yIGRlYnVnCgogICAgcmV0dXJuIHt9OwogIH0KfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgY29uc29sZS5sb2coJ2VycicgKyBlcnJvcik7IC8vIGZvciBkZWJ1ZwoKICByb3V0ZXIucmVwbGFjZSh7CiAgICBwYXRoOiAnL2xvZ0luJwogIH0pOwogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOwpleHBvcnQgZGVmYXVsdCBzZXJ2aWNlOw=="},{"version":3,"sources":["/Users/jth/IdeaProjects/GameGem/src/utils/request.js"],"names":["axios","router","service","create","baseURL","process","env","NODE_ENV","VUE_APP_BASE_API","withCredentials","timeout","interceptors","request","use","config","headers","error","console","log","Promise","reject","response","res","data","code","replace","path"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;AACA,IAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EACLC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCF,OAAO,CAACC,GAAR,CAAYE,gBAApD,GAAuE,EAF9C;AAEkD;AAC7EC,EAAAA,eAAe,EAAE,IAHU;AAGJ;AACvBC,EAAAA,OAAO,EAAE,IAJkB,CAIb;;AAJa,CAAb,CAAhB,C,CAOA;;AACAR,OAAO,CAACS,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACE,UAAAC,MAAM,EAAI;AACR;AACA;AACAA,EAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiC,kBAAjC,CAHQ,CAKR;AACA;AACA;AACA;AACA;AACA;;AACA,SAAOD,MAAP;AACD,CAbH,EAcE,UAAAE,KAAK,EAAI;AACP;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAFO,CAEY;;AACnB,SAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAlBH,E,CAqBA;;AACAd,OAAO,CAACS,YAAR,CAAqBU,QAArB,CAA8BR,GAA9B;AACE;AACF;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;AACE,UAAAQ,QAAQ,EAAI;AACV,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAArB;;AACA,MAAID,GAAG,CAACE,IAAJ,KAAa,CAAb,IAAkBF,GAAG,CAACE,IAAJ,KAAa,GAAnC,EAAwC;AACtC,WAAOF,GAAP;AACD,GAFD,MAEO,IAAIA,GAAG,CAACE,IAAJ,KAAa,GAAjB,EAAsB;AAC3B;AACAvB,IAAAA,MAAM,CAACwB,OAAP,CAAe;AACbC,MAAAA,IAAI,EAAE;AADO,KAAf;AAGD,GALM,MAKA;AACLT,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaI,GAAG,CAACE,IAA7B,EADK,CAC8B;;AACnC,WAAO,EAAP;AACD;AACF,CAxBH,EAyBE,UAAAR,KAAK,EAAI;AACPC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAQF,KAApB,EADO,CACoB;;AAE3Bf,EAAAA,MAAM,CAACwB,OAAP,CAAe;AACbC,IAAAA,IAAI,EAAE;AADO,GAAf;AAIA,SAAOP,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAjCH;AAoCA,eAAed,OAAf","sourcesContent":["import axios from 'axios'\nimport router from '@/router'\n\n// create an axios instance\nconst service = axios.create({\n  baseURL:\n    process.env.NODE_ENV === 'production' ? process.env.VUE_APP_BASE_API : '', // url = base url + request url\n  withCredentials: true, // send cookies when cross-domain requests\n  timeout: 5000 // request timeout\n})\n\n// request interceptor\nservice.interceptors.request.use(\n  config => {\n    // do something before request is sent\n    // config.headers['Content-Type'] = 'application/x-www-form-urlencoded'\n    config.headers['Content-Type'] = 'application/json'\n\n    // if (store.getters.token) {\n    //   // let each request carry token\n    //   // ['X-Token'] is a custom headers key\n    //   // please modify it according to the actual situation\n    //   config.headers['X-Token'] = ''\n    // }\n    return config\n  },\n  error => {\n    // do something with request error\n    console.log(error) // for debug\n    return Promise.reject(error)\n  }\n)\n\n// response interceptor\nservice.interceptors.response.use(\n  /**\n   * If you want to get http information such as headers or status\n   * Please return  response => response\n   */\n\n  /**\n   * Determine the request status by custom code\n   * Here is just an example\n   * You can also judge the status by HTTP Status Code\n   */\n  response => {\n    const res = response.data\n    if (res.code === 0 || res.code === 200) {\n      return res\n    } else if (res.code === 400) {\n      // msg: \"用户未登录，请登录后重新访问！!\"\n      router.replace({\n        path: '/logIn'\n      })\n    } else {\n      console.log('res.code' + res.code) // for debug\n      return {}\n    }\n  },\n  error => {\n    console.log('err' + error) // for debug\n\n    router.replace({\n      path: '/logIn'\n    })\n\n    return Promise.reject(error)\n  }\n)\n\nexport default service\n"]}]}